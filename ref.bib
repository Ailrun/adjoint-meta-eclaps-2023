@unpublished{Reed09,
  author = {Jason Reed},
  title = {A judgemental deconstruction of modal logic},
  year = {2009},
  url = {http://www.cs.cmu.edu/~jcreed/papers/jdml2.pdf}
}

@unpublished{Pruiksma18,
  author = {Klaas Pruiksma and William Chargin and Frank Pfenning and Jason Reed},
  title = {Adjoint Logic},
  year = {2018},
  url = {https://www.cs.cmu.edu/~fp/papers/adjoint18b.pdf}
}

@inproceedings{Fukuda:FSCD19,
  author = {Yosuke Fukuda and Akira Yoshimizu},
  title = {{A Linear-Logical Reconstruction of Intuitionistic Modal Logic S4}},
  booktitle = {4th International Conference on Formal Structures for Computation and Deduction (FSCD 2019)},
  pages = {20:1--20:24},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN = {978-3-95977-107-8},
  ISSN = {1868-8969},
  year = {2019},
  volume = {131},
  editor = {Herman Geuvers},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address = {Dagstuhl, Germany},
  URL =  {http://drops.dagstuhl.de/opus/volltexte/2019/10527},
  URN =  {urn:nbn:de:0030-drops-105271},
  doi =  {10.4230/LIPIcs.FSCD.2019.20},
}

@inproceedings{Benjamin:ESOP21,
  author = "Moon, Benjamin and Eades III, Harley and Orchard, Dominic",
  editor = "Yoshida, Nobuko",
  title = "Graded Modal Dependent Type Theory",
  booktitle = "Programming Languages and Systems",
  year = "2021",
  publisher = "Springer International Publishing",
  address = "Cham",
  pages = "462--490",
  isbn = "978-3-030-72019-3"
}

@article{Choudhury:POPL21,
  author = {Choudhury, Pritam and Eades III, Harley and Eisenberg, Richard A. and Weirich, Stephanie},
  title = {A Graded Dependent Type System with a Usage-Aware Semantics},
  year = {2021},
  issue_date = {January 2021},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {5},
  number = {POPL},
  url = {https://doi.org/10.1145/3434331},
  doi = {10.1145/3434331},
  journal = {Proc. ACM Program. Lang.},
  month = {jan},
  articleno = {50},
  numpages = {32},
  keywords = {heap semantics, quantitative reasoning, linearity, Irrelevance}
}

@inproceedings{Licata:LFCS16,
   author = {Daniel R. Licata and Michael Shulman},
   city = {Cham},
   doi = {10.1007/978-3-319-27683-0_16},
   editor = {Anil Artemov Sergei
and Nerode},
   isbn = {978-3-319-27683-0},
   journal = {Logical Foundations of Computer Science},
   pages = {219-235},
   publisher = {Springer International Publishing},
   title = {Adjoint Logic with a 2-Category of Modes},
   year = {2016},
}

@inproceedings{Licata:FSCD17,
  author = {Daniel R. Licata and Michael Shulman and Mitchell Riley},
  title = {{A Fibrational Framework for Substructural and Modal Logics}},
  booktitle = {2nd International Conference on Formal Structures for Computation and Deduction (FSCD 2017)},
  pages = {25:1--25:22},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN = {978-3-95977-047-7},
  ISSN = {1868-8969},
  year = {2017},
  volume = {84},
  editor = {Dale Miller},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address = {Dagstuhl, Germany},
  URL =  {http://drops.dagstuhl.de/opus/volltexte/2017/7740},
  URN =  {urn:nbn:de:0030-drops-77400},
  doi =  {10.4230/LIPIcs.FSCD.2017.25},
}

@article{Pruiksma:JLAMP21,
   abstract = {We present a system of session types based on adjoint logic which generalizes standard binary session types. Our system allows us to uniformly capture several new behaviors in the space of asynchronous message-passing communication, including multicast, where a process sends a single message to multiple clients, replicable services, which have multiple clients and replicate themselves on-demand to handle requests from those clients, and cancellation, where a process discards a channel without communicating along it. We provide session fidelity and deadlock-freedom results for this system, from which we then derive a logically justified form of garbage collection.},
   author = {Klaas Pruiksma and Frank Pfenning},
   doi = {10.1016/J.JLAMP.2020.100637},
   issn = {2352-2208},
   journal = {Journal of Logical and Algebraic Methods in Programming},
   month = {4},
   pages = {100637},
   publisher = {Elsevier},
   title = {A message-passing interpretation of adjoint logic},
   volume = {120},
   year = {2021},
}

@inproceedings{Gratzer:LICS20,
  author = {Gratzer, Daniel and
            Kavvos, G. A. and
            Nuyts, Andreas and
            Birkedal, Lars},
  title = {Multimodal Dependent Type Theory},
  year = {2020},
  isbn = {9781450371049},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3373718.3394736},
  doi = {10.1145/3373718.3394736},
  booktitle = {Proceedings of the 35th Annual ACM/IEEE Symposium on Logic in Computer Science},
  pages = {492–506},
  numpages = {15},
  keywords = {guarded recursion, Modal types, dependent types, categorical semantics, gluing},
  location = {Saarbr\"{u}cken, Germany},
  series = {LICS '20}
}

@article{Orchard:ICFP19,
  author = {Orchard, Dominic and Liepelt, Vilem-Benjamin and Eades III, Harley},
  title = {Quantitative Program Reasoning with Graded Modal Types},
  year = {2019},
  issue_date = {August 2019},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {3},
  number = {ICFP},
  url = {https://doi.org/10.1145/3341714},
  doi = {10.1145/3341714},
  journal = {Proc. ACM Program. Lang.},
  month = {jul},
  articleno = {110},
  numpages = {30},
  keywords = {linear types, graded modal types, implementation, coeffects}
}

@article{Gratzer21,
  author    = {Daniel Gratzer},
  title     = {Normalization for multimodal type theory},
  journal   = {CoRR},
  volume    = {abs/2106.01414},
  year      = {2021},
  url       = {https://arxiv.org/abs/2106.01414},
  eprinttype = {arXiv},
  eprint    = {2106.01414},
  timestamp = {Thu, 10 Jun 2021 16:34:18 +0200},
}

@article{Abel:ICFP20,
  author = {Abel, Andreas and Bernardy, Jean-Philippe},
  title = {A Unified View of Modalities in Type Systems},
  year = {2020},
  issue_date = {August 2020},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {4},
  number = {ICFP},
  url = {https://doi.org/10.1145/3408972},
  doi = {10.1145/3408972},
  journal = {Proc. ACM Program. Lang.},
  month = {aug},
  articleno = {90},
  numpages = {28},
  keywords = {subtyping, modal logic, linear types}
}

@article{Xie:POPL22,
  author = {Xie, Ningning and Pickering, Matthew and L\"{o}h, Andres and Wu, Nicolas and Yallop, Jeremy and Wang, Meng},
  title = {Staging with Class: A Specification for Typed Template Haskell},
  year = {2022},
  issue_date = {January 2022},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {6},
  number = {POPL},
  url = {https://doi.org/10.1145/3498723},
  doi = {10.1145/3498723},
  journal = {Proc. ACM Program. Lang.},
  month = {jan},
  articleno = {61},
  numpages = {30},
  keywords = {Typed Template Haskell, Staging, Type Classes}
}


@inproceedings{Yuse:PPDP06,
  author    = {Yosihiro Yuse and
               Atsushi Igarashi},
  title     = {A modal type system for multi-level generating extensions
               with persistent code},
  editor    = {Annalisa Bossi and
               Michael J. Maher},
  booktitle     = {8th International ACM SIGPLAN Conference
               on Principles and Practice of Declarative Programming (PPDP'06)},
  year      = {2006},
  publisher = {ACM},
  pages     = {201-212},
  doi       = {10.1145/1140335.1140360}
}


@article{Bernardy:POPL18,
author = {Jean-Philippe Bernardy and Mathieu Boespflug and Ryan R. Newton  and Simon Peyton Jones and Arnaud Spiwack},
title = {Linear Haskell: Practical Linearity in a Higher-Order Polymorphic Language},
year = {2017},
issue_date = {January 2018},
publisher = {Association for Computing Machinery},
volume = {2},
number = {POPL},
url = {https://doi.org/10.1145/3158093},
doi = {10.1145/3158093},
abstract = {Linear type systems have a long and storied history, but not a clear path forward to integrate with existing languages such as OCaml or Haskell. In this paper, we study a linear type system designed with two crucial properties in mind: backwards-compatibility and code reuse across linear and non-linear users of a library. Only then can the benefits of linear types permeate conventional functional programming. Rather than bifurcate types into linear and non-linear counterparts, we instead attach linearity to function arrows. Linear functions can receive inputs from linearly-bound values, but can also operate over unrestricted, regular values. To demonstrate the efficacy of our linear type system — both how easy it can be integrated in an existing language implementation and how streamlined it makes it to write programs with linear types — we implemented our type system in ghc, the leading Haskell compiler, and demonstrate two kinds of applications of linear types: mutable data with pure interfaces; and enforcing protocols in I/O-performing functions.},
journal = {Proc. ACM Program. Lang.},
articleno = {5},
numpages = {29},
keywords = {linear types, linear logic, laziness, GHC, Haskell, typestate, polymorphism}
}

  

@inproceedings{Atkey:LICS18,
author = {Robert Atkey},
title = {Syntax and Semantics of Quantitative Type Theory},
year = {2018},
isbn = {9781450355834},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3209108.3209189},
doi = {10.1145/3209108.3209189},
abstract = {We present Quantitative Type Theory, a Type Theory that records usage information for each variable in a judgement, based on a previous system by McBride. The usage information is used to give a realizability semantics using a variant of Linear Combinatory Algebras, refining the usual realizability semantics of Type Theory by accurately tracking resource behaviour. We define the semantics in terms of Quantitative Categories with Families, a novel extension of Categories with Families for modelling resource sensitive type theories.},
booktitle = {Proceedings of the 33rd Annual ACM/IEEE Symposium on Logic in Computer Science (LICS'18)},
pages = {56–65},
numpages = {10},
keywords = {Type Theory, Linear Logic},
location = {Oxford, United Kingdom}
}

@inproceedings{Benton:CSL95,
  author="Benton, P. N.",
  editor="Pacholski, Leszek and Tiuryn, Jerzy",
  title="A mixed linear and non-linear logic: Proofs, terms and models",
  booktitle="Computer Science Logic",
  year="1995",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="121--135",
  abstract="Intuitionistic linear logic regains the expressive power of intuitionistic logic through the ! (`of course') modality. Benton, Bierman, Hyland and de Paiva have given a term assignment system for ILL and an associated notion of categorical model in which the ! modality is modelled by a comonad satisfying certain extra conditions. Ordinary intuitionistic logic is then modelled in a cartesian closed category which arises as a full subcategory of the category of coalgebras for the comonad.",
  isbn="978-3-540-49404-1"
}

@article{Wadler:PROCOMET90,
  author = {Philip Wadler},
  title = {Linear types can change the world},
  year = {1990}
  }
